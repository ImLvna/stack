#!/usr/bin/env python3

import os
import shutil
import subprocess
from sys import argv

def log(*args, **kwargs):
	if "-v" in argv:
		print("[update.py]", end=" ")
		print(*args, **kwargs)
"""
Traverses all subdirectories and makes a copy of their nginx.conf file so nginx can access it
(ty luna <33)
"""
def nginx_config_http():
	log("nginx_config_http: Starting")
	
	copied = []
	for dir in os.listdir("."):
		if dir == "nginx" or dir.endswith(".disabled"):
			continue
		if os.path.isdir(dir):
			if os.path.isfile(f"{dir}/nginx.conf"):
				shutil.copyfile(f"{dir}/nginx.conf", f"nginx/docker-configs/{dir}.conf")
				copied.append(dir)
				log(f"nginx_config_http: Copied nginx.conf for {dir}")
	for dir in os.listdir('nginx/docker-configs'):
		if dir.endswith('.conf') and dir[:-5] not in copied:
			print(f"Removing nginx config for {dir} as it no longer exists")
			os.remove(f"nginx/docker-configs/{dir}")
	log(f"nginx_config_http: final {copied=}")
	
	log("nginx_config_http: Done!")

"""
compiles all stream blocks into nginx.conf so that nginx can access them

i would do this the way shown above but its 2am and when i tried it that way nginx wouldnt start
"""
def compile_nginx_main_conf():
	loaded = []
	mapping = {}
	log("compile_nginx_main_conf: Starting")
	for dir in os.listdir("."):
		if dir == "nginx" or dir.endswith(".disabled"):
			continue
		if os.path.isdir(dir):
			if os.path.isfile(f"{dir}/stream.conf"):
				try:
					log(f"compile_nginx_main_conf: Loading stream.conf for {dir}")
					mapping[dir] = open(f"{dir}/stream.conf", "r").read()
					loaded.append(dir)
					log(f"compile_nginx_main_conf: Loaded stream.conf for {dir}")
				except:
					print(f"Failed to load stream.conf for {dir}, skipping")
	
	log(f"compile_nginx_main_conf: Compiling nginx.conf with {loaded=}")
	nginx_conf = open("nginx/nginx.conf", "r").read()
	# remove old section
	nginx_conf = nginx_conf.split("# BEGIN AUTOGENERATED STREAM BLOCK")[0]
	# add new section

	nginx_conf += "# BEGIN AUTOGENERATED STREAM BLOCK\n"
	nginx_conf += "stream {\n"
	for dir in loaded:
		log(f"compile_nginx_main_conf: Adding stream block for {dir}")
		section = "\n\t".join(mapping[dir].split('\n'))
		nginx_conf += f"    {section}\n"
	nginx_conf += "}\n"
	nginx_conf += "# END AUTOGENERATED STREAM BLOCK\n"
	log("compile_nginx_main_conf: Writing nginx.conf...")
	open("nginx/nginx.conf", "w").write(nginx_conf)
	log("compile_nginx_main_conf: Done!")
	
				
nginx_config_http()
compile_nginx_main_conf()


if os.geteuid() == 0:
	print('Restarting nginx')
	subprocess.run(['docker', 'restart', 'nginx'])